" vim ftw
set nocompatible

" pathogen.vim ftw
filetype off
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

set modelines=10

" set the title in xterm
set title

" better buffer management
set hidden

" fixup backspace behavior
set backspace=indent,eol,start

let mapleader = ","
set history=1000

" Automatically reload files
set autoread

" searching stuff
set hlsearch
set incsearch

" Make <C-L> clear highlight and redraw
nnoremap <C-L> :nohls<CR><C-L>
inoremap <C-L> <C-O>:nohls<CR>

" ignore case only if there are no upcase letters in the search
set ignorecase
set smartcase

" <tab> completion for filenames
set wildmenu
set wildmode=list:longest
set complete-=i

" turn syntax highlighting on
syntax on

" 256 colors, colorscheme
set t_Co=256
colorscheme solarized
set background=dark

set vb t_vb=

filetype plugin indent on
set ruler
set tabstop=2
set smarttab
set shiftwidth=2
set autoindent
set expandtab
set cursorline

" Trailling spaces and tabs
set list
set listchars=tab:>-,trail:·,nbsp:·

set fileformat=unix
set nobackup

" Status Line
set statusline=%F%m%r%h%w\ [f:%{&ff}\ t:%Y]\ [A:\%03.3b\ H:\%02.2B]\ [P:%04l,%04v][%p%%]\ [LEN=%L]\ %{fugitive#statusline()}
set laststatus=2

" NT bindings
map <leader>n :NERDTreeToggle<CR>
map <leader>ntm :NERDTreeMirror<CR>
map <leader>ntc :NERDTreeClose<CR>

" Align bindings
" map <leader>a= to :Align = (rather than :Align := )
map <leader>a= :Align =<CR>

" FuzzyFinder
let g:fuzzy_ignore = "*.log"
let g:fuzzy_matching_limit = 70
"map <leader>t :FufFile **/<CR>
"map <leader>b :FufBuffer<CR>

" Set minimum window height
set winheight=10

" ctags stuff
set tags=./tags,tags,./TAGS,TAGS

" numbers
set number

" gui stuff
set guioptions-=T
set guioptions-=r
set guioptions-=L

" grep
map <leader>a :Ack<space>
map <leader>a* :Ack<space><cword><CR>
set grepprg=ack
set grepformat=%f:%l:%m

" backup files
set backupdir=~/.vim/backup
set directory=~/.vim/backup
